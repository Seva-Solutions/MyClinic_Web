{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nandupokhrel/Desktop/OurClinic_Web/src/components/googleCalendar/weekView/components/WeekView.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport AddEventModal from './AddEventModal';\nimport WeekToolbar from './WeekToolbar';\nimport WeekHeader from './WeekHeader';\nimport TimeSlotGroup from './TimeSlotGroup';\nimport EventHighlighter from './EventHighlighter';\nimport { times, getAllDaysInTheWeek } from '../../utils';\nimport { container } from '../styles';\n\nclass WeekView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startDate: +moment(),\n      weekDays: getAllDaysInTheWeek(),\n      showAddEventModal: false,\n      eventStart: null,\n      eventEnd: null\n    };\n\n    this.goToNextWeek = () => {\n      const dateAfter7Days = moment(this.state.startDate).add(7, 'days');\n      this.setState({\n        startDate: +dateAfter7Days,\n        weekDays: getAllDaysInTheWeek(dateAfter7Days)\n      });\n    };\n\n    this.goToPreviousWeek = () => {\n      const dateBefore7Days = moment(this.state.startDate).subtract(7, 'days');\n      this.setState({\n        startDate: +dateBefore7Days,\n        weekDays: getAllDaysInTheWeek(dateBefore7Days)\n      });\n    };\n\n    this.goToToday = () => {\n      this.setState({\n        startDate: +moment(),\n        weekDays: getAllDaysInTheWeek()\n      });\n    };\n\n    this.openAddEventModal = (dateStamp, time) => {\n      const start = moment(dateStamp).set('hour', time);\n      const end = start.clone().add(1, 'hour');\n      this.setState({\n        showAddEventModal: true,\n        eventStart: +start,\n        eventEnd: +end\n      });\n    };\n\n    this.onCloseAddEventModal = () => {\n      this.setState({\n        showAddEventModal: false\n      });\n    };\n\n    this.onOkAddEventModal = title => {\n      this.props.onNewEvent({\n        title,\n        start: this.state.eventStart,\n        end: this.state.eventEnd\n      });\n      this.setState({\n        showAddEventModal: false\n      });\n    };\n\n    this.onCurrentEventTimeChange = dates => {\n      this.setState({\n        eventStart: +dates[0],\n        eventEnd: +dates[1]\n      });\n    };\n  }\n\n  render() {\n    const {\n      weekDays,\n      showAddEventModal,\n      eventStart,\n      eventEnd,\n      startDate\n    } = this.state;\n    const {\n      events\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: [/*#__PURE__*/_jsxDEV(AddEventModal, {\n        visible: showAddEventModal,\n        onCancel: this.onCloseAddEventModal,\n        onClose: this.onCloseAddEventModal,\n        onOk: this.onOkAddEventModal,\n        eventStart: eventStart,\n        eventEnd: eventEnd,\n        onTimeChange: this.onCurrentEventTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeekToolbar, {\n        goToPreviousWeek: this.goToPreviousWeek,\n        goToNextWeek: this.goToNextWeek,\n        startDate: startDate,\n        goToToday: this.goToToday\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeekHeader, {\n        weekDays: weekDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), times.map(time => /*#__PURE__*/_jsxDEV(TimeSlotGroup, {\n        time: time,\n        weekDays: weekDays,\n        events: events[time],\n        openAddEventModal: this.openAddEventModal,\n        children: events[time] && events[time].map(event => event.startWeek <= moment(startDate).week() && event.endWeek >= moment(startDate).week() && /*#__PURE__*/_jsxDEV(EventHighlighter, {\n          onEventDelete: this.props.onEventDelete,\n          onEventUpdate: this.props.onEventUpdate,\n          startDate: startDate,\n          event: event\n        }, event.title + event.end + event.start, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this))\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WeekView;","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/OurClinic_Web/src/components/googleCalendar/weekView/components/WeekView.js"],"names":["React","Component","moment","AddEventModal","WeekToolbar","WeekHeader","TimeSlotGroup","EventHighlighter","times","getAllDaysInTheWeek","container","WeekView","state","startDate","weekDays","showAddEventModal","eventStart","eventEnd","goToNextWeek","dateAfter7Days","add","setState","goToPreviousWeek","dateBefore7Days","subtract","goToToday","openAddEventModal","dateStamp","time","start","set","end","clone","onCloseAddEventModal","onOkAddEventModal","title","props","onNewEvent","onCurrentEventTimeChange","dates","render","events","map","event","startWeek","week","endWeek","onEventDelete","onEventUpdate"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,KAAR,EAAeC,mBAAf,QAAyC,aAAzC;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AAEA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BW,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,CAACX,MAAM,EADZ;AAENY,MAAAA,QAAQ,EAAEL,mBAAmB,EAFvB;AAGNM,MAAAA,iBAAiB,EAAE,KAHb;AAINC,MAAAA,UAAU,EAAE,IAJN;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KADuB;;AAAA,SAY/BC,YAZ+B,GAYhB,MAAM;AACnB,YAAMC,cAAc,GAAGjB,MAAM,CAAE,KAAKU,KAAL,CAAWC,SAAb,CAAN,CAA8BO,GAA9B,CAAmC,CAAnC,EAAsC,MAAtC,CAAvB;AACA,WAAKC,QAAL,CAAe;AACbR,QAAAA,SAAS,EAAE,CAACM,cADC;AAEbL,QAAAA,QAAQ,EAAEL,mBAAmB,CAAEU,cAAF;AAFhB,OAAf;AAID,KAlB8B;;AAAA,SAuB/BG,gBAvB+B,GAuBZ,MAAM;AACvB,YAAMC,eAAe,GAAGrB,MAAM,CAAE,KAAKU,KAAL,CAAWC,SAAb,CAAN,CAA8BW,QAA9B,CAAwC,CAAxC,EAA2C,MAA3C,CAAxB;AACA,WAAKH,QAAL,CAAe;AACbR,QAAAA,SAAS,EAAE,CAACU,eADC;AAEbT,QAAAA,QAAQ,EAAEL,mBAAmB,CAAEc,eAAF;AAFhB,OAAf;AAID,KA7B8B;;AAAA,SAkC/BE,SAlC+B,GAkCnB,MAAM;AAChB,WAAKJ,QAAL,CAAe;AACbR,QAAAA,SAAS,EAAE,CAACX,MAAM,EADL;AAEbY,QAAAA,QAAQ,EAAEL,mBAAmB;AAFhB,OAAf;AAID,KAvC8B;;AAAA,SA8C/BiB,iBA9C+B,GA8CX,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACvC,YAAMC,KAAK,GAAG3B,MAAM,CAAEyB,SAAF,CAAN,CAAmBG,GAAnB,CAAwB,MAAxB,EAAgCF,IAAhC,CAAd;AACA,YAAMG,GAAG,GAAGF,KAAK,CAACG,KAAN,GAAeZ,GAAf,CAAoB,CAApB,EAAuB,MAAvB,CAAZ;AAEA,WAAKC,QAAL,CAAe;AACbN,QAAAA,iBAAiB,EAAE,IADN;AAEbC,QAAAA,UAAU,EAAE,CAACa,KAFA;AAGbZ,QAAAA,QAAQ,EAAE,CAACc;AAHE,OAAf;AAKD,KAvD8B;;AAAA,SA4D/BE,oBA5D+B,GA4DR,MAAM;AAC3B,WAAKZ,QAAL,CAAe;AACbN,QAAAA,iBAAiB,EAAE;AADN,OAAf;AAGD,KAhE8B;;AAAA,SAsE/BmB,iBAtE+B,GAsEXC,KAAK,IAAI;AAC3B,WAAKC,KAAL,CAAWC,UAAX,CAAuB;AACrBF,QAAAA,KADqB;AAErBN,QAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWI,UAFG;AAGrBe,QAAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWK;AAHK,OAAvB;AAKA,WAAKI,QAAL,CAAe;AACbN,QAAAA,iBAAiB,EAAE;AADN,OAAf;AAGD,KA/E8B;;AAAA,SAqF/BuB,wBArF+B,GAqFJC,KAAK,IAAI;AAClC,WAAKlB,QAAL,CAAe;AACbL,QAAAA,UAAU,EAAE,CAACuB,KAAK,CAAC,CAAD,CADL;AAEbtB,QAAAA,QAAQ,EAAE,CAACsB,KAAK,CAAC,CAAD;AAFH,OAAf;AAID,KA1F8B;AAAA;;AA4F/BC,EAAAA,MAAM,GAAI;AACR,UAAM;AACJ1B,MAAAA,QADI;AAEJC,MAAAA,iBAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,QAJI;AAKJJ,MAAAA;AALI,QAMF,KAAKD,KANT;AAOA,UAAM;AAAC6B,MAAAA;AAAD,QAAW,KAAKL,KAAtB;AACA,wBACE;AAAK,MAAA,KAAK,EAAE1B,SAAZ;AAAA,8BAEE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEK,iBADX;AAEE,QAAA,QAAQ,EAAE,KAAKkB,oBAFjB;AAGE,QAAA,OAAO,EAAE,KAAKA,oBAHhB;AAIE,QAAA,IAAI,EAAE,KAAKC,iBAJb;AAKE,QAAA,UAAU,EAAElB,UALd;AAME,QAAA,QAAQ,EAAEC,QANZ;AAOE,QAAA,YAAY,EAAE,KAAKqB;AAPrB;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE,QAAC,WAAD;AACE,QAAA,gBAAgB,EAAE,KAAKhB,gBADzB;AAEE,QAAA,YAAY,EAAE,KAAKJ,YAFrB;AAGE,QAAA,SAAS,EAAEL,SAHb;AAIE,QAAA,SAAS,EAAE,KAAKY;AAJlB;AAAA;AAAA;AAAA;AAAA,cAZF,eAmBE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA,cAnBF,EAqBGN,KAAK,CAACkC,GAAN,CAAWd,IAAI,iBACd,QAAC,aAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,QAAQ,EAAEd,QAHZ;AAIE,QAAA,MAAM,EAAE2B,MAAM,CAACb,IAAD,CAJhB;AAKE,QAAA,iBAAiB,EAAE,KAAKF,iBAL1B;AAAA,kBAOGe,MAAM,CAACb,IAAD,CAAN,IACCa,MAAM,CAACb,IAAD,CAAN,CAAac,GAAb,CACEC,KAAK,IACHA,KAAK,CAACC,SAAN,IAAmB1C,MAAM,CAAEW,SAAF,CAAN,CAAmBgC,IAAnB,EAAnB,IACAF,KAAK,CAACG,OAAN,IAAiB5C,MAAM,CAAEW,SAAF,CAAN,CAAmBgC,IAAnB,EADjB,iBAEA,QAAC,gBAAD;AACE,UAAA,aAAa,EAAE,KAAKT,KAAL,CAAWW,aAD5B;AAEE,UAAA,aAAa,EAAE,KAAKX,KAAL,CAAWY,aAF5B;AAIE,UAAA,SAAS,EAAEnC,SAJb;AAKE,UAAA,KAAK,EAAE8B;AALT,WAGOA,KAAK,CAACR,KAAN,GAAcQ,KAAK,CAACZ,GAApB,GAA0BY,KAAK,CAACd,KAHvC;AAAA;AAAA;AAAA;AAAA,gBAJJ;AARJ,SACOD,IADP;AAAA;AAAA;AAAA;AAAA,cADD,CArBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+CD;;AApJ8B;;AAuJjC,eAAejB,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport moment from 'moment';\nimport AddEventModal from './AddEventModal';\nimport WeekToolbar from './WeekToolbar';\nimport WeekHeader from './WeekHeader';\nimport TimeSlotGroup from './TimeSlotGroup';\nimport EventHighlighter from './EventHighlighter';\nimport {times, getAllDaysInTheWeek} from '../../utils';\nimport {container} from '../styles';\n\nclass WeekView extends Component {\n  state = {\n    startDate: +moment (),\n    weekDays: getAllDaysInTheWeek (),\n    showAddEventModal: false,\n    eventStart: null,\n    eventEnd: null,\n  };\n\n  /**\n   * Sets next week days in the state\n  */\n  goToNextWeek = () => {\n    const dateAfter7Days = moment (this.state.startDate).add (7, 'days');\n    this.setState ({\n      startDate: +dateAfter7Days,\n      weekDays: getAllDaysInTheWeek (dateAfter7Days),\n    });\n  };\n\n  /**\n   * Sets previous week days in the state\n  */\n  goToPreviousWeek = () => {\n    const dateBefore7Days = moment (this.state.startDate).subtract (7, 'days');\n    this.setState ({\n      startDate: +dateBefore7Days,\n      weekDays: getAllDaysInTheWeek (dateBefore7Days),\n    });\n  };\n\n  /**\n   * Brings today's date in the view\n   */\n  goToToday = () => {\n    this.setState ({\n      startDate: +moment (),\n      weekDays: getAllDaysInTheWeek (),\n    });\n  };\n\n  /**\n   * Opens the add event modal and initialize the date from the cell\n   * @param {timeStamp} dateStamp - DateStamp of the cell the user clicked\n   * @param {number} time - Time of the cell the user clicked\n  */\n  openAddEventModal = (dateStamp, time) => {\n    const start = moment (dateStamp).set ('hour', time);\n    const end = start.clone ().add (1, 'hour');\n\n    this.setState ({\n      showAddEventModal: true,\n      eventStart: +start,\n      eventEnd: +end,\n    });\n  };\n\n  /**\n   * Closes the add event modal\n  */\n  onCloseAddEventModal = () => {\n    this.setState ({\n      showAddEventModal: false,\n    });\n  };\n\n  /**\n   * Adds the new event and closes the add event modal\n   * @param {string} title - Title of the new event\n  */\n  onOkAddEventModal = title => {\n    this.props.onNewEvent ({\n      title,\n      start: this.state.eventStart,\n      end: this.state.eventEnd,\n    });\n    this.setState ({\n      showAddEventModal: false,\n    });\n  };\n\n  /**\n   * Saves the timeStamps of the new event in the state\n   * @param {arr: moment, moment} - Array containing start and end date of the new event\n  */\n  onCurrentEventTimeChange = dates => {\n    this.setState ({\n      eventStart: +dates[0],\n      eventEnd: +dates[1],\n    });\n  };\n\n  render () {\n    const {\n      weekDays,\n      showAddEventModal,\n      eventStart,\n      eventEnd,\n      startDate,\n    } = this.state;\n    const {events} = this.props;\n    return (\n      <div style={container}>\n\n        <AddEventModal\n          visible={showAddEventModal}\n          onCancel={this.onCloseAddEventModal}\n          onClose={this.onCloseAddEventModal}\n          onOk={this.onOkAddEventModal}\n          eventStart={eventStart}\n          eventEnd={eventEnd}\n          onTimeChange={this.onCurrentEventTimeChange}\n        />\n\n        <WeekToolbar\n          goToPreviousWeek={this.goToPreviousWeek}\n          goToNextWeek={this.goToNextWeek}\n          startDate={startDate}\n          goToToday={this.goToToday}\n        />\n\n        <WeekHeader weekDays={weekDays} />\n\n        {times.map (time => (\n          <TimeSlotGroup\n            key={time}\n            time={time}\n            weekDays={weekDays}\n            events={events[time]}\n            openAddEventModal={this.openAddEventModal}\n          >\n            {events[time] &&\n              events[time].map (\n                event =>\n                  event.startWeek <= moment (startDate).week () &&\n                  event.endWeek >= moment (startDate).week () &&\n                  <EventHighlighter\n                    onEventDelete={this.props.onEventDelete}\n                    onEventUpdate={this.props.onEventUpdate}\n                    key={event.title + event.end + event.start}\n                    startDate={startDate}\n                    event={event}\n                  />\n              )}\n          </TimeSlotGroup>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default WeekView;\n"]},"metadata":{},"sourceType":"module"}