{"ast":null,"code":"import moment from 'moment';\n/**\n   * Generate all days in a week\n   * @param {moment} currentDate - Any date in the week\n   * @returns {array} days - All days in the week with date, dateStamp and weekDayName\n  */\n\nexport const getAllDaysInTheWeek = (currentDate = moment()) => {\n  const weekStart = currentDate.clone().startOf('week');\n  const days = Array.from(Array(7)).map((day, index) => index).map(day => moment(weekStart).add(day, 'days').set('minutes', 0).set('seconds', 0)).map(momentObj => ({\n    date: momentObj.date(),\n    dateStamp: +momentObj,\n    weekDayName: momentObj.format('ddd')\n  }));\n  return days;\n}; // All the hours in the day\n\nexport const times = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n/**\n   * Generated coordinated for the highlight\n   * @param {Object} event - Event object\n   * {\n   *  start: Time stamp for the start of the event :timeStamp,\n   *  title: Title fo the new event :String,\n   *  end: Time stamp for the end of the event :timeStamp,\n   * }\n   * @param {timeStamp} startDate - Timestamp of any date in the current week\n   * @returns {Object} coordinates - Coordinates object with\n   * {\n   *  top - CSS top of the element,\n   *  left - CSS left of the element,\n   *  width - CSS width of the element,\n   *  height - CSS height of the element\n   * }\n  */\n\nexport const generateWeekViewCoordinates = (event, startDate) => {\n  const start = moment(event.start);\n  const end = moment(event.end);\n  const duration = moment.duration(end.diff(start));\n  const weekStart = moment(startDate); // Calculating Top\n\n  const top = start.minutes() === 30 ? '50%' : '0%'; // Calculating height\n\n  const timeFactor = duration.hours() + duration.minutes() / 60;\n  const height = timeFactor * 100;\n  let left, width;\n\n  if (weekStart.week() === start.week()) {\n    const weekDay = start.weekday();\n    left = (weekDay + 1) * 12.5;\n  }\n\n  if (weekStart.week() === start.week() && weekStart.week() === end.week()) {\n    const daysDiff = duration.days();\n    width = (daysDiff + 1) * 12.5 - 2;\n  }\n\n  if (weekStart.week() > start.week() && weekStart.week() === end.week()) {\n    const daysDiff = moment.duration(end.diff(weekStart.startOf('week').set('hours', start.hours()).set('minutes', start.minutes()))).days();\n    width = (daysDiff + 1) * 12.5 - 2;\n  }\n\n  if (weekStart.week() > start.week()) {\n    left = 12.5;\n  }\n\n  if (weekStart.week() < end.week()) {\n    width = 100 - left;\n  }\n\n  return {\n    top: top + '%',\n    left: left + '%',\n    height: height + '%',\n    width: width + '%'\n  };\n};\n/**\n * Checks if the dateStamp represents todays date\n * @param {dateStamp} dateStamp - Date Stamp to check\n * @return {boolean}\n */\n\nexport const isTodaysDate = dateStamp => {\n  const today = moment();\n  dateStamp = moment(dateStamp);\n  return moment.duration(dateStamp.diff(today)).days() === 0 && today.day() === dateStamp.day();\n};","map":{"version":3,"sources":["C:/Users/16477/Desktop/OurClinic_Web/src/components/googleCalendar/utils.js"],"names":["moment","getAllDaysInTheWeek","currentDate","weekStart","clone","startOf","days","Array","from","map","day","index","add","set","momentObj","date","dateStamp","weekDayName","format","times","generateWeekViewCoordinates","event","startDate","start","end","duration","diff","top","minutes","timeFactor","hours","height","left","width","week","weekDay","weekday","daysDiff","isTodaysDate","today"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\n/**\n   * Generate all days in a week\n   * @param {moment} currentDate - Any date in the week\n   * @returns {array} days - All days in the week with date, dateStamp and weekDayName\n  */\nexport const getAllDaysInTheWeek = (currentDate = moment ()) => {\n  const weekStart = currentDate.clone ().startOf ('week');\n\n  const days = Array.from (Array (7))\n    .map ((day, index) => index)\n    .map (day =>\n      moment (weekStart).add (day, 'days').set ('minutes', 0).set ('seconds', 0)\n    )\n    .map (momentObj => ({\n      date: momentObj.date (),\n      dateStamp: +momentObj,\n      weekDayName: momentObj.format ('ddd'),\n    }));\n\n  return days;\n};\n\n// All the hours in the day\nexport const times = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n];\n\n/**\n   * Generated coordinated for the highlight\n   * @param {Object} event - Event object\n   * {\n   *  start: Time stamp for the start of the event :timeStamp,\n   *  title: Title fo the new event :String,\n   *  end: Time stamp for the end of the event :timeStamp,\n   * }\n   * @param {timeStamp} startDate - Timestamp of any date in the current week\n   * @returns {Object} coordinates - Coordinates object with\n   * {\n   *  top - CSS top of the element,\n   *  left - CSS left of the element,\n   *  width - CSS width of the element,\n   *  height - CSS height of the element\n   * }\n  */\nexport const generateWeekViewCoordinates = (event, startDate) => {\n  const start = moment (event.start);\n  const end = moment (event.end);\n  const duration = moment.duration (end.diff (start));\n  const weekStart = moment (startDate);\n\n  // Calculating Top\n  const top = start.minutes () === 30 ? '50%' : '0%';\n\n  // Calculating height\n  const timeFactor = duration.hours () + duration.minutes () / 60;\n  const height = timeFactor * 100;\n\n  let left, width;\n  if (weekStart.week () === start.week ()) {\n    const weekDay = start.weekday ();\n    left = (weekDay + 1) * 12.5;\n  }\n\n  if (\n    weekStart.week () === start.week () &&\n    weekStart.week () === end.week ()\n  ) {\n    const daysDiff = duration.days ();\n    width = (daysDiff + 1) * 12.5 - 2;\n  }\n\n  if (weekStart.week () > start.week () && weekStart.week () === end.week ()) {\n    const daysDiff = moment\n      .duration (\n        end.diff (\n          weekStart\n            .startOf ('week')\n            .set ('hours', start.hours ())\n            .set ('minutes', start.minutes ())\n        )\n      )\n      .days ();\n    width = (daysDiff + 1) * 12.5 - 2;\n  }\n\n  if (weekStart.week () > start.week ()) {\n    left = 12.5;\n  }\n\n  if (weekStart.week () < end.week ()) {\n    width = 100 - left;\n  }\n\n  return {\n    top: top + '%',\n    left: left + '%',\n    height: height + '%',\n    width: width + '%',\n  };\n};\n\n/**\n * Checks if the dateStamp represents todays date\n * @param {dateStamp} dateStamp - Date Stamp to check\n * @return {boolean}\n */\nexport const isTodaysDate = dateStamp => {\n  const today = moment ();\n  dateStamp = moment (dateStamp);\n  return (\n    moment.duration (dateStamp.diff (today)).days () === 0 &&\n    today.day () === dateStamp.day ()\n  );\n};\n"]},"metadata":{},"sourceType":"module"}