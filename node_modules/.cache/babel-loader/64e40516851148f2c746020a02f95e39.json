{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nandupokhrel/Desktop/OurClinic_Web/src/components/googleCalendar/weekView/components/EventHighlighter.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport AddEventModal from './AddEventModal';\nimport { generateWeekViewCoordinates } from '../../utils';\nimport { eventHighlighter } from '../styles';\n\nclass EventHighlighter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showEditEventModal: false,\n      eventNewStart: null,\n      eventNewEnd: null\n    };\n\n    this.deleteEvent = () => {\n      this.props.onEventDelete(this.props.event.id);\n      this.setState({\n        showEditEventModal: false\n      });\n    };\n\n    this.updateEvent = title => {\n      this.props.onEventUpdate(this.props.event.id, {\n        title,\n        start: this.state.eventNewStart,\n        end: this.state.eventNewEnd\n      });\n      this.setState({\n        showEditEventModal: false\n      });\n    };\n\n    this.openEditEventModal = () => {\n      console.log(this.props.event.title);\n      this.setState({\n        showEditEventModal: true,\n        eventNewStart: this.props.event.start,\n        eventNewEnd: this.props.event.end\n      });\n    };\n\n    this.onCurrentEventTimeChange = dates => {\n      console.log('called');\n      this.setState({\n        eventNewStart: +dates[0],\n        eventNewEnd: +dates[1]\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showEditEventModal: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      showEditEventModal,\n      eventNewStart,\n      eventNewEnd\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddEventModal, {\n        editMode: true,\n        eventTitle: this.props.event.title,\n        visible: showEditEventModal,\n        onCancel: this.deleteEvent,\n        onClose: this.closeModal,\n        onOk: this.updateEvent,\n        eventStart: eventNewStart,\n        eventEnd: eventNewEnd,\n        onTimeChange: this.onCurrentEventTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.openEditEventModal,\n        style: { ...generateWeekViewCoordinates(this.props.event, this.props.startDate),\n          ...eventHighlighter\n        },\n        children: [this.props.event.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 10\n          },\n          children: [moment(this.props.event.start).format('hh:mm a'), ' ', \"-\", ' ', moment(this.props.event.end).format('hh:mm a')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EventHighlighter;","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/OurClinic_Web/src/components/googleCalendar/weekView/components/EventHighlighter.js"],"names":["React","Component","moment","AddEventModal","generateWeekViewCoordinates","eventHighlighter","EventHighlighter","state","showEditEventModal","eventNewStart","eventNewEnd","deleteEvent","props","onEventDelete","event","id","setState","updateEvent","title","onEventUpdate","start","end","openEditEventModal","console","log","onCurrentEventTimeChange","dates","closeModal","render","startDate","fontSize","format"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport moment from 'moment';\nimport AddEventModal from './AddEventModal';\nimport {generateWeekViewCoordinates} from '../../utils';\nimport {eventHighlighter} from '../styles';\n\nclass EventHighlighter extends Component {\n  state = {\n    showEditEventModal: false,\n    eventNewStart: null,\n    eventNewEnd: null,\n  };\n\n  /**\n   * Deletes the event from the event list\n  */\n  deleteEvent = () => {\n    this.props.onEventDelete (this.props.event.id);\n    this.setState ({\n      showEditEventModal: false,\n    });\n  };\n\n  /**\n   * Updates the event\n   * @param {string} title - Updated title of the event\n   */\n  updateEvent = title => {\n    this.props.onEventUpdate (this.props.event.id, {\n      title,\n      start: this.state.eventNewStart,\n      end: this.state.eventNewEnd,\n    });\n    this.setState ({\n      showEditEventModal: false,\n    });\n  };\n\n  /**\n   * Open the edit event modal and initializes the start and end time\n   */\n  openEditEventModal = () => {\n    console.log (this.props.event.title);\n    this.setState ({\n      showEditEventModal: true,\n      eventNewStart: this.props.event.start,\n      eventNewEnd: this.props.event.end,\n    });\n  };\n\n  /**\n   * Set the updated start and end times the state of the event being edited\n   * @param {arr: moment, moment} - Array containing start and end date of the event\n   */\n  onCurrentEventTimeChange = dates => {\n    console.log ('called');\n    this.setState ({\n      eventNewStart: +dates[0],\n      eventNewEnd: +dates[1],\n    });\n  };\n\n  /**\n   * Closes modal and does nothing more!\n   */\n  closeModal = () => {\n    this.setState ({\n      showEditEventModal: false,\n    });\n  };\n\n  render () {\n    const {showEditEventModal, eventNewStart, eventNewEnd} = this.state;\n    return (\n      <React.Fragment>\n        <AddEventModal\n          editMode={true}\n          eventTitle={this.props.event.title}\n          visible={showEditEventModal}\n          onCancel={this.deleteEvent}\n          onClose={this.closeModal}\n          onOk={this.updateEvent}\n          eventStart={eventNewStart}\n          eventEnd={eventNewEnd}\n          onTimeChange={this.onCurrentEventTimeChange}\n        />\n        <div\n          onClick={this.openEditEventModal}\n          style={{\n            ...generateWeekViewCoordinates (\n              this.props.event,\n              this.props.startDate\n            ),\n            ...eventHighlighter,\n          }}\n        >\n          {this.props.event.title} <br />\n          <span style={{fontSize: 10}}>\n            {moment (this.props.event.start).format ('hh:mm a')}\n            {' '}\n            -\n            {' '}\n            {moment (this.props.event.end).format ('hh:mm a')}\n          </span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventHighlighter;\n"]},"metadata":{},"sourceType":"module"}