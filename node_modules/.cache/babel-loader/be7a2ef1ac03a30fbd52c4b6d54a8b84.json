{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\16477\\\\Desktop\\\\OurClinic_Web\\\\src\\\\components\\\\googleCalendar\\\\weekView\\\\components\\\\AddEventModal.js\";\nimport { Modal, Button } from 'antd';\nimport React, { Component } from 'react';\nimport AddEvent from './AddEvent';\n\nclass AddEventModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleTitleChange = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.handleOk = () => {\n      this.props.onOk(this.state.title);\n    };\n  }\n\n  /**\n   * To show the title auto fill and\n   * re-initialize the title on adding new event\n   */\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.eventTitle) {\n      return {\n        title: nextProps.eventTitle\n      };\n    } else {\n      return {\n        title: ''\n      };\n    }\n  }\n  /**\n   * Sets the title in the state\n   * @param {event} event - JS/React event\n   */\n\n\n  render() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      visible: this.props.visible,\n      onOk: this.handleOk,\n      onCancel: this.props.onClose,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.props.onCancel,\n        children: this.props.editMode ? 'Delete' : 'Cancel'\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleOk,\n        children: this.props.editMode ? 'Update Event' : 'Add Event'\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(AddEvent, {\n        title: title,\n        onTitleChange: this.handleTitleChange,\n        start: this.props.eventStart,\n        end: this.props.eventEnd,\n        onTimeChange: this.props.onTimeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddEventModal;","map":{"version":3,"sources":["C:/Users/16477/Desktop/OurClinic_Web/src/components/googleCalendar/weekView/components/AddEventModal.js"],"names":["Modal","Button","React","Component","AddEvent","AddEventModal","state","title","handleTitleChange","event","setState","target","value","handleOk","props","onOk","getDerivedStateFromProps","nextProps","eventTitle","render","visible","onClose","onCancel","editMode","eventStart","eventEnd","onTimeChange"],"mappings":";;AAAA,SAAQA,KAAR,EAAeC,MAAf,QAA4B,MAA5B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD4B;;AAAA,SAyBpCC,iBAzBoC,GAyBhBC,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAe;AACbH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADP,OAAf;AAGD,KA7BmC;;AAAA,SAkCpCC,QAlCoC,GAkCzB,MAAM;AACf,WAAKC,KAAL,CAAWC,IAAX,CAAiB,KAAKT,KAAL,CAAWC,KAA5B;AACD,KApCmC;AAAA;;AAKpC;AACF;AACA;AACA;AACE,SAAOS,wBAAP,CAAiCC,SAAjC,EAA4C;AAC1C,QAAIA,SAAS,CAACC,UAAd,EAA0B;AACxB,aAAO;AACLX,QAAAA,KAAK,EAAEU,SAAS,CAACC;AADZ,OAAP;AAGD,KAJD,MAIO;AACL,aAAO;AACLX,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;AACF;AAED;AACF;AACA;AACA;;;AAcEY,EAAAA,MAAM,GAAI;AACR,UAAM;AAACZ,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWM,OADtB;AAEE,MAAA,IAAI,EAAE,KAAKP,QAFb;AAGE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWO,OAHvB;AAIE,MAAA,MAAM,EAAE,cACN,QAAC,MAAD;AAAmB,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,QAAvC;AAAA,kBACG,KAAKR,KAAL,CAAWS,QAAX,GAAsB,QAAtB,GAAiC;AADpC,SAAY,MAAZ;AAAA;AAAA;AAAA;AAAA,cADM,eAIN,QAAC,MAAD;AAAqB,QAAA,IAAI,EAAC,SAA1B;AAAoC,QAAA,OAAO,EAAE,KAAKV,QAAlD;AAAA,kBACG,KAAKC,KAAL,CAAWS,QAAX,GAAsB,cAAtB,GAAuC;AAD1C,SAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,cAJM,CAJV;AAAA,6BAaE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEhB,KADT;AAEE,QAAA,aAAa,EAAE,KAAKC,iBAFtB;AAGE,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWU,UAHpB;AAIE,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWW,QAJlB;AAKE,QAAA,YAAY,EAAE,KAAKX,KAAL,CAAWY;AAL3B;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA/DmC;;AAkEtC,eAAerB,aAAf","sourcesContent":["import {Modal, Button} from 'antd';\nimport React, {Component} from 'react';\nimport AddEvent from './AddEvent';\n\nclass AddEventModal extends Component {\n  state = {\n    title: '',\n  };\n\n  /**\n   * To show the title auto fill and\n   * re-initialize the title on adding new event\n   */\n  static getDerivedStateFromProps (nextProps) {\n    if (nextProps.eventTitle) {\n      return {\n        title: nextProps.eventTitle,\n      };\n    } else {\n      return {\n        title: '',\n      };\n    }\n  }\n\n  /**\n   * Sets the title in the state\n   * @param {event} event - JS/React event\n   */\n  handleTitleChange = event => {\n    this.setState ({\n      title: event.target.value,\n    });\n  };\n\n  /**\n   * Updates the event\n   */\n  handleOk = () => {\n    this.props.onOk (this.state.title);\n  };\n\n  render () {\n    const {title} = this.state;\n    return (\n      <Modal\n        visible={this.props.visible}\n        onOk={this.handleOk}\n        onCancel={this.props.onClose}\n        footer={[\n          <Button key=\"back\" onClick={this.props.onCancel}>\n            {this.props.editMode ? 'Delete' : 'Cancel'}\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n            {this.props.editMode ? 'Update Event' : 'Add Event'}\n          </Button>,\n        ]}\n      >\n        <AddEvent\n          title={title}\n          onTitleChange={this.handleTitleChange}\n          start={this.props.eventStart}\n          end={this.props.eventEnd}\n          onTimeChange={this.props.onTimeChange}\n        />\n      </Modal>\n    );\n  }\n}\n\nexport default AddEventModal;\n"]},"metadata":{},"sourceType":"module"}